# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: sdf-group-rubin
#   namespace: devel-transfer-embargo
# spec:
#   storageClassName: sdf-group-rubin
#   accessModes:
#     - ReadWriteMany
#   resources:
#     requests:
#       storage: 1Gi
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: sdf-data-rubin
#   namespace: devel-transfer-embargo
# spec:
#   storageClassName: sdf-data-rubin
#   accessModes:
#     - ReadWriteMany
#   resources:
#     requests:
#       storage: 1Gi
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: test-transfer-embargo
  namespace: devel-transfer-embargo
spec:
  schedule: "* * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: transfer-embargo-container
              image: "ghcr.io/lsst-dm/transfer-embargo:latest"
              imagePullPolicy: Always
              command:
                - /bin/sh
                - -c
                - date; echo Hello from the Kubernetes cluster
              env:
              - name: temp_from
                value: 
              - name: temp_to
                value:
              - name: instrument
                value: "LATISS"
              - name: embargo_hours
                value: 80
              - name: datasettype
                value: "raw"
              - name: collection
                value: "LATISS/raw/all"
              - name: nowtime
                value: now
              - name: move
                value:
              - name: log
                value:
              - name: S3_ENDPOINT_URL
                value: http://s3dfrgw.slac.stanford.edu
              - name: AWS_ACCESS_KEY_ID
                valueFrom:
                  secretKeyRef:
                    name: s3
                    key: s3_access
              - name: AWS_SECRET_ACCESS_KEY
                valueFrom:
                  secretKeyRef:
                    name: s3
                    key: s3_key
              volumeMounts:
                - name: sdf-group-rubin
                  mountPath: /sdf/group/rubin
                - name: sdf-data-rubin
                  mountPath: /sdf/data/rubin
          volumes:
            - name: sdf-group-rubin
              persistentVolumeClaim:
                claimName: sdf-group-rubin
            - name: sdf-data-rubin
              persistentVolumeClaim:
                claimName: sdf-data-rubin
          restartPolicy: OnFailure

